/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName : 'MODKIT_PILEUP' {
        ext.args = { [                                                       
            '--combine-mods',                                        // Combine base modification calls, all counts of modified bases are summed together (hm and m in this case)
            '--motif A 0 --motif CHH 0 --motif CHG 0 --motif CG 0',  // Extract methylation from all 4 mods 
            '--log-filepath ${meta.id}_pileup.log'                      // Include log
        ].join(' ') }
        ext.prefix = { "${meta.id}" } 
    }

    withName : 'PBMM2_ALIGN' {
        ext.args = { [                                                       
            '--sort',               // Sort output 
            '--preset HiFi',        // preset for HiFi PacBio reads
        ].join(' ') }
        ext.prefix = { "${meta.id}" } 
    }

    withName : 'SAMTOOLS_SORT' {
        ext.args = { [                                                       
            '-n'               //  Sort by read name 
        ].join(' ') }
        ext.prefix = { "${meta.id}" } 
    }

    withName : 'SAMTOOLS_FASTQ' {
        ext.args = { [                                                       
            '-T "*"',               // Copy all tags over (important for MM/ML tags) 
            '-c 9',                 // compress to max level 
        ].join(' ') }
        ext.prefix = { "${meta.id}" } 
    }

    withName : 'SAMTOOLS_IMPORT' {
        ext.args = { [                                                       
            '-T "*"',               // Copy all tags over (important for MM/ML tags)
            '--output-fmt bam'      // Specify output to bam 
        ].join(' ') }
        ext.prefix = { "${meta.id}" } 
    }

    withName : 'DORADO_ALIGNER' {
        ext.args = { [                                                       
            '--emit-summary',           // Emit aligning summary
            '--output-dir ${meta.id}'      // Required when --emit-summary is set  
        ].join(' ') }
        ext.prefix = { "${meta.id}" } 
    }

        withName : 'PORECHOP_PORECHOP' {
        ext.args = { [                                                       
            '--no_split'               // Do not split 
        ].join(' ') }
        ext.prefix = { "${meta.id}" } 
    }
}
